<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Brigthnes" xml:space="preserve">
    <value>Helligkeit</value>
  </data>
  <data name="Brigthnes_Info" xml:space="preserve">
    <value>Ein nach der Farbkalkulation angewendeter Parameter, um die Gesamthelligkeit zu beeinflussen.</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Devices_Headline" xml:space="preserve">
    <value>Verfügbare Geräte</value>
  </data>
  <data name="Devices_Info" xml:space="preserve">
    <value>Diese Liste zeigt die im Netzwerk gefunden Geräte an.</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="Headline_Modes" xml:space="preserve">
    <value>Modus einstellen und senden</value>
  </data>
  <data name="HorizontalOffset" xml:space="preserve">
    <value>Horizontale Verschiebung</value>
  </data>
  <data name="HorizontalOffset_Info" xml:space="preserve">
    <value>Streckt den Sinus in die Breite. Spielen Sie mit diesem Parameter doch ein wenig.</value>
  </data>
  <data name="Hue" xml:space="preserve">
    <value>Farbton</value>
  </data>
  <data name="Hue_Info" xml:space="preserve">
    <value>Der Farbton (auch Buntart, Buntton, Farbrichtung, englisch hue) ist ein Farbmerkmal. Neben der Helligkeit und der Farbsättigung gehört der Farbton zu den drei vom Menschen als grundlegend empfundenen Merkmalen bzw. Eigenschaften einer Farbe.

Der Farbton bezeichnet in der Farbenlehre die Eigenschaft, nach der man Farbempfindungen nach beispielsweise Rot, Gelb oder Grün unterscheidet. Eine Farbe desselben Farbtons kann entweder in der Farbsättigung variieren, wie Graublau gegenüber Blau, oder in der Helligkeit, beispielsweise Rosa gegenüber Rot. (Wikipedia)</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="LEDRespond" xml:space="preserve">
    <value>Antwort des LED Gerätes</value>
  </data>
  <data name="Luminosity" xml:space="preserve">
    <value>Leuchtkraft</value>
  </data>
  <data name="Luminosity_Info" xml:space="preserve">
    <value>Die Leuchtkraft L ist eine vor allem in der Astronomie verwendete Bezeichnung für die abgestrahlte Leistung (Energie pro Zeit). Wenn die über alle Bereiche des elektromagnetischen Spektrums summierte abgestrahlte Leistung betrachtet wird, ist die Leuchtkraft ein Synonym für „Strahlungsleistung“.  (Wikipedia)</value>
  </data>
  <data name="MainParameter_Headline" xml:space="preserve">
    <value>Hauptparameter</value>
  </data>
  <data name="MainParameter_Info" xml:space="preserve">
    <value>Diese Parameter sind für viele Modi relevant. Die ersten drei Parameter reräsentieren die Farbe. Die weiteren das Verhalten der LED Kette als gesamtes.</value>
  </data>
  <data name="Modes_Headline" xml:space="preserve">
    <value>Modi</value>
  </data>
  <data name="Modes_Info" xml:space="preserve">
    <value>Die Led Modi einstellen</value>
  </data>
  <data name="Mode_color" xml:space="preserve">
    <value>Einfarbig</value>
  </data>
  <data name="Mode_off" xml:space="preserve">
    <value>LED-Anzeige deaktivieren</value>
  </data>
  <data name="Mode_on" xml:space="preserve">
    <value>LED-Anzeige aktivieren</value>
  </data>
  <data name="Mode_pixel" xml:space="preserve">
    <value>Pixeldurchlauf</value>
  </data>
  <data name="Mode_pulse" xml:space="preserve">
    <value>Pulsierend</value>
  </data>
  <data name="Mode_rainbow" xml:space="preserve">
    <value>Regenbogen</value>
  </data>
  <data name="Mode_sin" xml:space="preserve">
    <value>Sinuswellen</value>
  </data>
  <data name="NotUpToDate" xml:space="preserve">
    <value>Nicht aktuell</value>
  </data>
  <data name="NumberOfLeds" xml:space="preserve">
    <value>LED Anzahl</value>
  </data>
  <data name="NumberOfLeds_Info" xml:space="preserve">
    <value>Hiermit kann die Anzahl der angesprochenen Leds verringert werden</value>
  </data>
  <data name="RainbowParameter_Headline" xml:space="preserve">
    <value>Regenbogen Parameter</value>
  </data>
  <data name="RainbowParameter_Info" xml:space="preserve">
    <value>Stellen Sie hier spezielle Parameter für den Regenbogen ein.</value>
  </data>
  <data name="Randomized" xml:space="preserve">
    <value>Verstörend</value>
  </data>
  <data name="RenameDevice_Info" xml:space="preserve">
    <value>Erstelle hier einen neuen Namen für das Gerät. Maximal 16 Zeichen. Unter umständen wird das Gerät erst nach einem neustart der LED angezeigt. Das Gerät ist möglicherweise noch unter dem alten Namen sichtbar, bis die App neu gestartet wurde.</value>
  </data>
  <data name="Saturation" xml:space="preserve">
    <value>Sättigung</value>
  </data>
  <data name="Saturation_Info" xml:space="preserve">
    <value>Die Farbsättigung ist ein Farbmerkmal. Neben dem Farbton und der Helligkeit gehört die Sättigung zu den drei vom Menschen als grundlegend empfundenen Merkmalen bzw. Eigenschaften einer Farbe. Sie beschreibt die Qualität der Farbnuance, ob sie eher den bunten oder unbunten Farben zuneigt. (Wikipedia)</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Senden</value>
  </data>
  <data name="SendAndClose" xml:space="preserve">
    <value>Senden und schließen</value>
  </data>
  <data name="SinParameter_Headline" xml:space="preserve">
    <value>Sinuswellen Parameter</value>
  </data>
  <data name="SinParameter_Info" xml:space="preserve">
    <value>Stellen Sie hier spezielle Parameter für den Kurvenverlauf des Sinus' ein.</value>
  </data>
  <data name="SinReverseParameter_Headline" xml:space="preserve">
    <value>Umkehren</value>
  </data>
  <data name="Speed" xml:space="preserve">
    <value>Geschwindigkeit</value>
  </data>
  <data name="Speed_Info" xml:space="preserve">
    <value>Die Rate, mit der die Leds aktualisiert werden. in x/Sekunde</value>
  </data>
  <data name="StorageClear" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="StorageLoad" xml:space="preserve">
    <value>Laden</value>
  </data>
  <data name="StorageSave" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="Storage_Headline" xml:space="preserve">
    <value>Dauerhafter Speicher</value>
  </data>
  <data name="Storage_Info" xml:space="preserve">
    <value>Speichert die aktuelle Konfiguration des Gerätes, sodass diese beim nächsten Start automatisch geladen wird.</value>
  </data>
  <data name="VersionHistory" xml:space="preserve">
    <value />
  </data>
  <data name="VerticalOffset" xml:space="preserve">
    <value>Vertikale Verschiebung</value>
  </data>
  <data name="VerticalOffset_Info" xml:space="preserve">
    <value>Streckt den Sinus in die Höhe. Spielen Sie mit diesem Parameter doch ein wenig.</value>
  </data>
</root>