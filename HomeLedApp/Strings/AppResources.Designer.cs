//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HomeLedApp.Strings {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HomeLedApp.Strings.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Brigthnes ähnelt.
        /// </summary>
        public static string Brigthnes {
            get {
                return ResourceManager.GetString("Brigthnes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A parameter used after color calculation to influence the overall brightness. ähnelt.
        /// </summary>
        public static string Brigthnes_Info {
            get {
                return ResourceManager.GetString("Brigthnes_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Details ähnelt.
        /// </summary>
        public static string Details {
            get {
                return ResourceManager.GetString("Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Available devices ähnelt.
        /// </summary>
        public static string Devices_Headline {
            get {
                return ResourceManager.GetString("Devices_Headline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This list shows the devices found on the network. ähnelt.
        /// </summary>
        public static string Devices_Info {
            get {
                return ResourceManager.GetString("Devices_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit ähnelt.
        /// </summary>
        public static string Edit {
            get {
                return ResourceManager.GetString("Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set and send Mode ähnelt.
        /// </summary>
        public static string Headline_Modes {
            get {
                return ResourceManager.GetString("Headline_Modes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Horizontal offset ähnelt.
        /// </summary>
        public static string HorizontalOffset {
            get {
                return ResourceManager.GetString("HorizontalOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extends the sine wave to the width. Why don&apos;t you play around with this parameter a bit? ähnelt.
        /// </summary>
        public static string HorizontalOffset_Info {
            get {
                return ResourceManager.GetString("HorizontalOffset_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hue ähnelt.
        /// </summary>
        public static string Hue {
            get {
                return ResourceManager.GetString("Hue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Colorfulness, chroma and saturation are attributes of perceived color relating to chromatic intensity. As defined formally by the International Commission on Illumination (CIE) they respectively describe three different aspects of chromatic intensity, but the terms are often used loosely and interchangeably in contexts where these aspects are not clearly distinguished. The precise meanings of the terms vary by what other functions they are dependent on. (Wikipedia) ähnelt.
        /// </summary>
        public static string Hue_Info {
            get {
                return ResourceManager.GetString("Hue_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Info ähnelt.
        /// </summary>
        public static string Info {
            get {
                return ResourceManager.GetString("Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LED-Device Respond ähnelt.
        /// </summary>
        public static string LEDRespond {
            get {
                return ResourceManager.GetString("LEDRespond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Luminosity ähnelt.
        /// </summary>
        public static string Luminosity {
            get {
                return ResourceManager.GetString("Luminosity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Luminosity is an absolute measure of radiated electromagnetic power (light), the radiant power emitted by a light-emitting object. (Wikipedia) ähnelt.
        /// </summary>
        public static string Luminosity_Info {
            get {
                return ResourceManager.GetString("Luminosity_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Main parameter ähnelt.
        /// </summary>
        public static string MainParameter_Headline {
            get {
                return ResourceManager.GetString("MainParameter_Headline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die These parameters are relevant for many modes. The first three parameters represent the color. The other parameters determine the behaviour of the LED chain as a whole. ähnelt.
        /// </summary>
        public static string MainParameter_Info {
            get {
                return ResourceManager.GetString("MainParameter_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Monochrome ähnelt.
        /// </summary>
        public static string Mode_color {
            get {
                return ResourceManager.GetString("Mode_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable LED display ähnelt.
        /// </summary>
        public static string Mode_off {
            get {
                return ResourceManager.GetString("Mode_off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activate LED display ähnelt.
        /// </summary>
        public static string Mode_on {
            get {
                return ResourceManager.GetString("Mode_on", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pixel Scroll ähnelt.
        /// </summary>
        public static string Mode_pixel {
            get {
                return ResourceManager.GetString("Mode_pixel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pulsating ähnelt.
        /// </summary>
        public static string Mode_pulse {
            get {
                return ResourceManager.GetString("Mode_pulse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rainbow ähnelt.
        /// </summary>
        public static string Mode_rainbow {
            get {
                return ResourceManager.GetString("Mode_rainbow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sine Waves ähnelt.
        /// </summary>
        public static string Mode_sin {
            get {
                return ResourceManager.GetString("Mode_sin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modes ähnelt.
        /// </summary>
        public static string Modes_Headline {
            get {
                return ResourceManager.GetString("Modes_Headline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the Led modes ähnelt.
        /// </summary>
        public static string Modes_Info {
            get {
                return ResourceManager.GetString("Modes_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Welcome to the new version: {0}. Check out a list of new features here! ähnelt.
        /// </summary>
        public static string Notification_NewVersion {
            get {
                return ResourceManager.GetString("Notification_NewVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not up to date ähnelt.
        /// </summary>
        public static string NotUpToDate {
            get {
                return ResourceManager.GetString("NotUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LED number ähnelt.
        /// </summary>
        public static string NumberOfLeds {
            get {
                return ResourceManager.GetString("NumberOfLeds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hereby the number of addressed LEDs can be reduced ähnelt.
        /// </summary>
        public static string NumberOfLeds_Info {
            get {
                return ResourceManager.GetString("NumberOfLeds_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rainbow Parameter ähnelt.
        /// </summary>
        public static string RainbowParameter_Headline {
            get {
                return ResourceManager.GetString("RainbowParameter_Headline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set special parameters for the rainbow here. ähnelt.
        /// </summary>
        public static string RainbowParameter_Info {
            get {
                return ResourceManager.GetString("RainbowParameter_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disturbing ähnelt.
        /// </summary>
        public static string Randomized {
            get {
                return ResourceManager.GetString("Randomized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set new name for the device here. Maximal 16 characters allowed. LED device may need a restart.  ähnelt.
        /// </summary>
        public static string RenameDevice_Info {
            get {
                return ResourceManager.GetString("RenameDevice_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saturation ähnelt.
        /// </summary>
        public static string Saturation {
            get {
                return ResourceManager.GetString("Saturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hue is one of the main properties (called color appearance parameters) of a color, defined technically (in the CIECAM02 model), as &quot;the degree to which a stimulus can be described as similar to or different from stimuli that are described as red, green, blue, and yellow&quot;[1] (which in certain theories of color vision are called unique hues). Hue can typically be represented quantitatively by a single number, often corresponding to an angular position around a central or neutral point or axis on a colorspace  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string Saturation_Info {
            get {
                return ResourceManager.GetString("Saturation_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Send ähnelt.
        /// </summary>
        public static string Send {
            get {
                return ResourceManager.GetString("Send", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Send and close ähnelt.
        /// </summary>
        public static string SendAndClose {
            get {
                return ResourceManager.GetString("SendAndClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sine wave parameters ähnelt.
        /// </summary>
        public static string SinParameter_Headline {
            get {
                return ResourceManager.GetString("SinParameter_Headline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Here you can set special parameters for the curve of the sine wave. ähnelt.
        /// </summary>
        public static string SinParameter_Info {
            get {
                return ResourceManager.GetString("SinParameter_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverse ähnelt.
        /// </summary>
        public static string SinReverseParameter_Headline {
            get {
                return ResourceManager.GetString("SinReverseParameter_Headline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speed ähnelt.
        /// </summary>
        public static string Speed {
            get {
                return ResourceManager.GetString("Speed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The rate at which the leds are updated. in x/sec ähnelt.
        /// </summary>
        public static string Speed_Info {
            get {
                return ResourceManager.GetString("Speed_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Permanent memory ähnelt.
        /// </summary>
        public static string Storage_Headline {
            get {
                return ResourceManager.GetString("Storage_Headline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saves the current configuration of the device so that it will be loaded automatically at the next start. ähnelt.
        /// </summary>
        public static string Storage_Info {
            get {
                return ResourceManager.GetString("Storage_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete ähnelt.
        /// </summary>
        public static string StorageClear {
            get {
                return ResourceManager.GetString("StorageClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load ähnelt.
        /// </summary>
        public static string StorageLoad {
            get {
                return ResourceManager.GetString("StorageLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Store ähnelt.
        /// </summary>
        public static string StorageSave {
            get {
                return ResourceManager.GetString("StorageSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string VersionHistory {
            get {
                return ResourceManager.GetString("VersionHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vertical offset ähnelt.
        /// </summary>
        public static string VerticalOffset {
            get {
                return ResourceManager.GetString("VerticalOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Raises the sine wave. Why don&apos;t you play around with this parameter a little? ähnelt.
        /// </summary>
        public static string VerticalOffset_Info {
            get {
                return ResourceManager.GetString("VerticalOffset_Info", resourceCulture);
            }
        }
    }
}
